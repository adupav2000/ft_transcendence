{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/ft_transcendance/front/src/src/Components/Pong/pong.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Ball from \"../../Elements/ball\";\nimport Paddle from \"../../Elements/paddle\";\nimport Score from \"../../Elements/score\";\nimport * as utils from \"../../GameUtils/GameUtils\";\nimport \"../../hooks/useAnimationFrame\";\nimport useAnimationFrame from \"../../hooks/useAnimationFrame\";\nimport \"./pong.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pong() {\n  _s();\n\n  //SEE USESTATE DOCUMENTATION\n  const [position, setPosition] = React.useState(50);\n  const [computerPosition, setComputerPosition] = React.useState(50);\n  const [gameState, setGameState] = React.useState({\n    isPlaying: false,\n    scoreToWin: 1,\n    playerScore: 0,\n    computerScore: 0\n  });\n\n  function handleStart() {\n    //SET THE DEFAULT VARIABLE\n    setGameState(oldGameState => ({ ...oldGameState,\n      isPlaying: true,\n      playerScore: 0,\n      computerScore: 0\n    }));\n  }\n\n  function handleMouseMove(event) {\n    //HANDLE THE MOUSE MOVE EVENT ON THE GAME AREA\n    if (gameState.isPlaying) {\n      const value = event.clientY / window.innerHeight * 100;\n      setPosition(value);\n    }\n  }\n\n  function restartGame() {\n    //RESET GAME VARIABLE TO STARTING VALUES\n    setGameState(oldGameState => ({ ...oldGameState,\n      isPlaying: false\n    }));\n    setComputerPosition(50);\n    setPosition(50);\n  } //FONCTION NON APPELLER A TESTER AVEC LE BACKEND\n\n\n  async function sendData() {\n    //INFO SUR LA PARTIE A ENVOYER A LA BASE DE DONNÉE\n    //DES INFO PEUVENT MANQUÉ\n    const gameData = {\n      time: Date(),\n      scoreToWin: gameState.scoreToWin,\n      player1id: 1,\n      //ON RECUPERERA LES VRAIS ID DES JOUEUR\n      player2id: 2,\n      player1score: gameState.playerScore,\n      player2score: gameState.computerScore\n    };\n    console.log(JSON.stringify(gameData)); //EXEMPLE D'ENVOIE EN COMMENTAIRE A TESTER\n    // \tconst url:string = \"http://localhost:3000/game\"\n    // \tawait fetch(url, {\n    //     method: 'POST',\n    //     body: JSON.stringify(gameData)\n    //   }).then(function(response) {\n    //     console.log(response)\n    //     return response.json();\n    //   });\n  }\n\n  function setRoundWin() {\n    //CHECK WHO WIN AND CHANGE STATE VALUE OF SCORE\n    const contactZone = utils.getContactZone();\n\n    if (contactZone.right >= window.innerWidth) {\n      setGameState(oldGameState => ({ ...oldGameState,\n        playerScore: oldGameState.playerScore + 1\n      }));\n    } else if (contactZone.left <= 0) {\n      setGameState(oldGameState => ({ ...oldGameState,\n        computerScore: oldGameState.computerScore + 1\n      }));\n    }\n  }\n\n  function isWin() {\n    //CHECK IF SOMEONE WINS\n    if (gameState.playerScore === gameState.scoreToWin || gameState.computerScore === gameState.scoreToWin) return true;\n    return false;\n  }\n\n  function updateGame(time) {\n    //GAMELOOP\n    //IA LOGIC JUST FOLOWING THE Y COORD OF THE BALL\n    const newPosition = parseFloat(window.getComputedStyle(document.getElementById(\"ball\")).getPropertyValue('--y'));\n    setComputerPosition(newPosition);\n    setRoundWin();\n    if (isWin()) restartGame();\n  }\n\n  useAnimationFrame(updateGame);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pong\",\n    onMouseMove: handleMouseMove,\n    children: [!gameState.isPlaying && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonStart\",\n      onClick: handleStart,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      playerScore: gameState.playerScore,\n      computerScore: gameState.computerScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Ball, {\n      isPlaying: gameState.isPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paddle, {\n      id: \"playerPaddle\",\n      className: \"left\",\n      position: position,\n      player: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paddle, {\n      id: \"computerPaddle\",\n      className: \"right\",\n      position: computerPosition,\n      player: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pong, \"PWqE27F58bzLW9a+NuwAKEwX7+A=\", false, function () {\n  return [useAnimationFrame];\n});\n\n_c = Pong;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pong\");","map":{"version":3,"names":["React","Ball","Paddle","Score","utils","useAnimationFrame","Pong","position","setPosition","useState","computerPosition","setComputerPosition","gameState","setGameState","isPlaying","scoreToWin","playerScore","computerScore","handleStart","oldGameState","handleMouseMove","event","value","clientY","window","innerHeight","restartGame","sendData","gameData","time","Date","player1id","player2id","player1score","player2score","console","log","JSON","stringify","setRoundWin","contactZone","getContactZone","right","innerWidth","left","isWin","updateGame","newPosition","parseFloat","getComputedStyle","document","getElementById","getPropertyValue"],"sources":["/Users/macbook/Documents/ft_transcendance/front/src/src/Components/Pong/pong.tsx"],"sourcesContent":["import React from \"react\"\nimport Ball from \"../../Elements/ball\"\nimport Paddle from \"../../Elements/paddle\"\nimport Score from \"../../Elements/score\"\nimport * as utils from \"../../GameUtils/GameUtils\"\nimport \"../../hooks/useAnimationFrame\"\nimport useAnimationFrame from \"../../hooks/useAnimationFrame\"\nimport \"./pong.css\"\n\n\ntype gameStateT = {\n    isPlaying:boolean,\n    scoreToWin:number,\n    playerScore:number,\n    computerScore:number\n}\ntype gameDataT = {\n\ttime:string,\n    scoreToWin:number,\n    player1id:number,\n    player2id:number,\n\tplayer1score:number,\n\tplayer2score:number\n}\n\nexport default function Pong()\n{\n\t//SEE USESTATE DOCUMENTATION\n    const [position, setPosition] = React.useState(50)\n    const [computerPosition, setComputerPosition] = React.useState(50)\n\tconst [gameState, setGameState] = React.useState<gameStateT>({\n        isPlaying: false,\n        scoreToWin: 1,\n        playerScore: 0,\n        computerScore: 0\n    })\n\n\tfunction handleStart()\n\t{\n\t\t//SET THE DEFAULT VARIABLE\n\t\tsetGameState((oldGameState) => ({\n\t\t\t...oldGameState,\n\t\t\tisPlaying: true,\n\t\t\tplayerScore: 0,\n        \tcomputerScore: 0\n\t\t}))\n\t}\n\n    function handleMouseMove(event:React.MouseEvent<HTMLDivElement>)\n    {\n\t\t//HANDLE THE MOUSE MOVE EVENT ON THE GAME AREA\n\t\tif (gameState.isPlaying)\n\t\t{\n        \tconst value:number = (event.clientY / window.innerHeight) * 100\n        \tsetPosition(value)\n\t\t}\n    }\n\n\tfunction restartGame()\n\t{\n\t\t//RESET GAME VARIABLE TO STARTING VALUES\n\t\tsetGameState((oldGameState) => ({\n\t\t\t...oldGameState,\n\t\t\tisPlaying: false,\n\t\t}))\n\t\tsetComputerPosition(50)\n\t\tsetPosition(50)\n\t}\n\n\t//FONCTION NON APPELLER A TESTER AVEC LE BACKEND\n\tasync function sendData ()\n\t{\n\t\t//INFO SUR LA PARTIE A ENVOYER A LA BASE DE DONNÉE\n\t\t//DES INFO PEUVENT MANQUÉ\n\t\tconst gameData:gameDataT = {\n\t\t\ttime: Date(),\n\t\t\tscoreToWin: gameState.scoreToWin,\n\t\t\tplayer1id: 1, //ON RECUPERERA LES VRAIS ID DES JOUEUR\n\t\t\tplayer2id: 2,\n\t\t\tplayer1score: gameState.playerScore,\n\t\t\tplayer2score:gameState.computerScore\n\t\t}\n\t\tconsole.log(JSON.stringify(gameData))\n\t\t//EXEMPLE D'ENVOIE EN COMMENTAIRE A TESTER\n\t// \tconst url:string = \"http://localhost:3000/game\"\n\t// \tawait fetch(url, {\n    //     method: 'POST',\n    //     body: JSON.stringify(gameData)\n    //   }).then(function(response) {\n    //     console.log(response)\n    //     return response.json();\n    //   });\n \n\t}\n\n\tfunction setRoundWin()\n\t{\n\t\t//CHECK WHO WIN AND CHANGE STATE VALUE OF SCORE\n\t\tconst contactZone:DOMRect = utils.getContactZone()\n\t\tif (contactZone.right >= window.innerWidth)\n\t\t{\n\t\t\tsetGameState((oldGameState) => ({\n\t\t\t\t...oldGameState,\n\t\t\t\tplayerScore: oldGameState.playerScore + 1\n\t\t\t}))\n\t\t}\n\t\telse if (contactZone.left <= 0) \n\t\t{\n\t\t\tsetGameState((oldGameState) => ({\n\t\t\t\t...oldGameState,\n\t\t\t\tcomputerScore: oldGameState.computerScore + 1\n\t\t\t}))\n\t\t}\n\t}\n\n\tfunction isWin()\n\t{\n\t\t//CHECK IF SOMEONE WINS\n\t\tif (gameState.playerScore === gameState.scoreToWin\n\t\t\t|| gameState.computerScore === gameState.scoreToWin)\n\t\t\treturn true\n\t\treturn false\n\t}\n\n    function updateGame(time:number)\n    {\n\t\t//GAMELOOP\n\t\t//IA LOGIC JUST FOLOWING THE Y COORD OF THE BALL\n        const newPosition =  parseFloat(window.getComputedStyle(document.getElementById(\"ball\")!).getPropertyValue('--y'));\n        setComputerPosition(newPosition)\n\t\tsetRoundWin()\n\t\tif (isWin())\n\t\t\trestartGame()\n\t\t\t\n    }\n\n\tuseAnimationFrame(updateGame)\n\n    return (\n        <div className=\"pong\" onMouseMove={handleMouseMove}>\n            {\n\t\t\t\t!gameState.isPlaying && \n                \t<button className=\"buttonStart\" onClick={handleStart}>\n\t\t\t\t\t\tStart Game\n\t\t\t\t\t</button>\n\t\t\t}\n            <Score playerScore={gameState.playerScore} computerScore={gameState.computerScore}/>\n            <Ball isPlaying={gameState.isPlaying}/>\n            <Paddle id=\"playerPaddle\" className=\"left\" position={position} player={true}/>\n            <Paddle id=\"computerPaddle\" className=\"right\" position={computerPosition} player={false}/>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}