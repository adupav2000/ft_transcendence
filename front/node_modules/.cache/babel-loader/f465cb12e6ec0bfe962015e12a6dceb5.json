{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/ft_transcendance/front/src/src/Elements/ball.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../Components/Pong/pong.css\";\nimport * as utils from \"../GameUtils/GameUtils\";\nimport useAnimationFrame from \"../hooks/useAnimationFrame\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ball(props) {\n  _s();\n\n  const [ballInfo, setBallInfo] = React.useState({\n    x: utils.getBallX(),\n    y: utils.getBallY(),\n    dirX: 0,\n    dirY: 0,\n    speed: 0,\n    delta: 0\n  });\n\n  function newGame() {\n    //SET NEW GAME BALL VARIABLE X, Y, X AND Y DIRECTION, SPEED\n    var directionX = 0;\n    var directionY = 0;\n    var defaultX = 50;\n    var defaultY = 50;\n\n    while (Math.abs(directionX) <= 0.3 || Math.abs(directionX) >= 0.8) {\n      const trigoDir = Math.random() * (0 - 2 * Math.PI);\n      directionX = Math.cos(trigoDir);\n      directionY = Math.sin(trigoDir);\n    }\n\n    utils.setBallX(defaultX.toString());\n    utils.setBallY(defaultY.toString());\n    setBallInfo({\n      x: utils.getBallX(),\n      y: utils.getBallY(),\n      dirX: directionX,\n      dirY: directionY,\n      speed: 0.05,\n      delta: 0\n    });\n  }\n\n  function isLose() {\n    //CHECK IF THE BALL HITS THE LEFT OR THE RIGHT\n    const contactZone = utils.getContactZone();\n\n    if (contactZone.right >= window.innerWidth || contactZone.left <= 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function checkYcollision() {\n    //CHECK IF THE BALL HITS THE TOP OR THE BOTTOM\n    const contactZone = utils.getContactZone();\n\n    if (contactZone.bottom >= window.innerHeight || contactZone.top <= 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function checkPaddleCollision() {\n    //CHECK IF THE BALL HITS A PADLLE\n    const ballZone = utils.getContactZone();\n    const playerPaddleZone = utils.getPaddleContactZone();\n    const computerPaddleZone = utils.getComputerContactZone();\n\n    if (isCollision(ballZone, playerPaddleZone)) {\n      return true;\n    }\n\n    if (isCollision(ballZone, computerPaddleZone)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function isCollision(rect1, rect2) {\n    //CHECK IF RECT1 HITS RECT2\n    return rect1.left <= rect2.right && rect1.right >= rect2.left && rect1.top <= rect2.bottom && rect1.bottom >= rect2.top;\n  }\n\n  function updateGame(delta) {\n    //GAMELOOP\n    if (props.isPlaying) {\n      delta = delta ? delta : 1;\n      if (!isLose()) refreshGame(delta);else newGame();\n    }\n  }\n\n  function refreshGame(delta) {\n    //UPTDATE THE BALL POSITON\n    const newX = ballInfo.x + ballInfo.dirX * ballInfo.speed * delta;\n    const newY = ballInfo.y + ballInfo.dirY * ballInfo.speed * delta;\n    utils.setBallX(newX.toString());\n    utils.setBallY(newY.toString());\n    setBallInfo(oldBallInfo => ({ ...oldBallInfo,\n      x: newX,\n      y: newY,\n      dirX: checkPaddleCollision() ? oldBallInfo.dirX * -1 : oldBallInfo.dirX,\n      dirY: checkYcollision() ? oldBallInfo.dirY * -1 : oldBallInfo.dirY,\n      speed: oldBallInfo.speed + 0.00001,\n      delta: delta\n    }));\n  }\n\n  React.useEffect(() => {\n    //RUN NEWGAME() ONLY WHEN THE PAGE FIRST REFRESH\n    //SEE REACT USE EFFECT DOCUMENTATION\n    newGame();\n  }, []); //USE ANIMATION CUSTOM HOOK\n  //SEE hook/useAnimationFrame.tsx FILE\n\n  useAnimationFrame(updateGame);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"ball\",\n    className: \"ball\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Ball, \"YtTxWFtYaV+xdqXFvlPXZrygjAE=\", false, function () {\n  return [useAnimationFrame];\n});\n\n_c = Ball;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ball\");","map":{"version":3,"names":["React","utils","useAnimationFrame","Ball","props","ballInfo","setBallInfo","useState","x","getBallX","y","getBallY","dirX","dirY","speed","delta","newGame","directionX","directionY","defaultX","defaultY","Math","abs","trigoDir","random","PI","cos","sin","setBallX","toString","setBallY","isLose","contactZone","getContactZone","right","window","innerWidth","left","checkYcollision","bottom","innerHeight","top","checkPaddleCollision","ballZone","playerPaddleZone","getPaddleContactZone","computerPaddleZone","getComputerContactZone","isCollision","rect1","rect2","updateGame","isPlaying","refreshGame","newX","newY","oldBallInfo","useEffect"],"sources":["/Users/macbook/Documents/ft_transcendance/front/src/src/Elements/ball.tsx"],"sourcesContent":["import React from \"react\"\nimport \"../Components/Pong/pong.css\"\nimport * as utils from \"../GameUtils/GameUtils\"\nimport useAnimationFrame from \"../hooks/useAnimationFrame\"\n\ntype ballPropsT = {\n\tisPlaying:boolean\n}\n\ntype ballInfoT = {\n    x: number,\n    y: number,\n    dirX: number,\n    dirY: number,\n    speed: number,\n\tdelta: number\n}\n\nexport default function Ball(props:ballPropsT)\n{\n    const [ballInfo, setBallInfo] = React.useState<ballInfoT>({\n\t\tx: utils.getBallX(),\n\t\ty: utils.getBallY(),\n\t\tdirX: 0,\n\t\tdirY: 0,\n\t\tspeed: 0,\n\t\tdelta: 0\n\t})\n\n\tfunction newGame()\n\t{\n\t\t//SET NEW GAME BALL VARIABLE X, Y, X AND Y DIRECTION, SPEED\n\t\tvar directionX:number = 0;\n\t\tvar directionY:number = 0;\n\t\tvar defaultX:number = 50\n\t\tvar defaultY:number = 50\n\t\t\n\t\twhile (Math.abs(directionX) <= 0.3 || Math.abs(directionX) >= 0.8)\n\t\t{\n\t\t\tconst trigoDir:number = Math.random() * (0 - (2 * Math.PI))\n\t\t\tdirectionX = Math.cos(trigoDir)\n\t\t\tdirectionY = Math.sin(trigoDir)\n\t\t}\n\t\tutils.setBallX(defaultX.toString())\n\t\tutils.setBallY(defaultY.toString())\n\t\tsetBallInfo({\n\t\t\tx: utils.getBallX(),\n\t\t\ty: utils.getBallY(),\n\t\t\tdirX: directionX,\n\t\t\tdirY: directionY,\n\t\t\tspeed: 0.05,\n\t\t\tdelta: 0\n\t\t})\n\t}\n\n\tfunction isLose()\n\t{\n\t\t//CHECK IF THE BALL HITS THE LEFT OR THE RIGHT\n\t\tconst contactZone:DOMRect = utils.getContactZone()\n\t\tif (contactZone.right >= window.innerWidth\n\t\t\t|| contactZone.left <= 0) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn false\n\t}\n\n\tfunction checkYcollision(){\n\t\t//CHECK IF THE BALL HITS THE TOP OR THE BOTTOM\n\t\tconst contactZone:DOMRect = utils.getContactZone()\n\t\tif (contactZone.bottom >= window.innerHeight \n\t\t\t|| contactZone.top <= 0) {\n\t\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tfunction checkPaddleCollision(){\n\t\t//CHECK IF THE BALL HITS A PADLLE\n\t\tconst ballZone:DOMRect = utils.getContactZone()\n\t\tconst playerPaddleZone:DOMRect = utils.getPaddleContactZone()\n\t\tconst computerPaddleZone:DOMRect = utils.getComputerContactZone()\n\t\tif (isCollision(ballZone, playerPaddleZone)) {\n\t\t\treturn true\n\t\t}\n\t\tif (isCollision(ballZone, computerPaddleZone)) {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tfunction isCollision(rect1:DOMRect, rect2:DOMRect)\n\t{\n\t\t//CHECK IF RECT1 HITS RECT2\n\t\treturn (\n\t\t\trect1.left <= rect2.right &&\n\t\t\trect1.right >= rect2.left &&\n\t\t\trect1.top <= rect2.bottom &&\n\t\t\trect1.bottom >= rect2.top\n\t\t\t)\n\t}\n\n\tfunction updateGame(delta:number)\n\t{\n\t\t//GAMELOOP\n\t\tif (props.isPlaying)\n\t\t{\n\t\t\tdelta = delta ? delta : 1\n\t\t\tif (!isLose())\n\t\t\t\trefreshGame(delta)\n\t\t\telse\n\t\t\t\tnewGame()\n\t\t}\n\t}\n\n\n\tfunction refreshGame(delta:number)\n\t{\n\t\t//UPTDATE THE BALL POSITON\n\t\tconst newX = ballInfo.x + (ballInfo.dirX * ballInfo.speed * delta) \n\t\t\tconst newY = ballInfo.y + (ballInfo.dirY * ballInfo.speed * delta)\n\n\t\t\tutils.setBallX(newX.toString())\n\t\t\tutils.setBallY(newY.toString())\n\t\t\tsetBallInfo((oldBallInfo) => ({\n\t\t\t\t...oldBallInfo,\n\t\t\t\tx: newX,\n\t\t\t\ty: newY,\n\t\t\t\tdirX: checkPaddleCollision() ? oldBallInfo.dirX * (-1) : oldBallInfo.dirX,\n\t\t\t\tdirY: checkYcollision() ? oldBallInfo.dirY * (-1) : oldBallInfo.dirY,\n\t\t\t\tspeed: oldBallInfo.speed + 0.00001,\n\t\t\t\tdelta: delta\n\t\t\t}))\n\t}\n\n\tReact.useEffect(() => {\n\t\t//RUN NEWGAME() ONLY WHEN THE PAGE FIRST REFRESH\n\t\t//SEE REACT USE EFFECT DOCUMENTATION\n\t\tnewGame()\n\t}, [])\n\n\t//USE ANIMATION CUSTOM HOOK\n\t//SEE hook/useAnimationFrame.tsx FILE\n\tuseAnimationFrame(updateGame)\n\t\n    return (\n        <div id=\"ball\" className=\"ball\">\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}